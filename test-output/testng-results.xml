<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="12" passed="7" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-05T21:27:57 IST" name="Suite" finished-at="2023-01-05T21:28:01 IST" duration-ms="3974">
    <groups>
    </groups>
    <test started-at="2023-01-05T21:27:57 IST" name="Test" finished-at="2023-01-05T21:28:01 IST" duration-ms="3974">
      <class name="Test_Demo.Test_3">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Test_Demo.Test_3@3a93b025]" started-at="2023-01-05T21:27:57 IST" name="setUp" finished-at="2023-01-05T21:28:01 IST" duration-ms="3618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testx()[pri:2, instance:Test_Demo.Test_3@3a93b025]" started-at="2023-01-05T21:28:01 IST" name="testx" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testx -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Test_Demo.Test_3@3a93b025]" started-at="2023-01-05T21:28:01 IST" name="tearDown" finished-at="2023-01-05T21:28:01 IST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test_Demo.Test_3 -->
      <class name="Test_Demo.Test_4">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="setUp" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testa()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="testa" finished-at="2023-01-05T21:27:57 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test_Demo.Test_4.testa(Test_4.java:18)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testa -->
        <test-method is-config="true" signature="tesrDown()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="tesrDown" finished-at="2023-01-05T21:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesrDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="setUp" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testb()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="testb" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testb -->
        <test-method signature="testb()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="testb" finished-at="2023-01-05T21:27:57 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testb -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="setUp" finished-at="2023-01-05T21:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tesrDown()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="tesrDown" finished-at="2023-01-05T21:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesrDown -->
        <test-method is-config="true" signature="tesrDown()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="tesrDown" finished-at="2023-01-05T21:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesrDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="setUp" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testb()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="testb" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testb -->
        <test-method is-config="true" signature="tesrDown()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="tesrDown" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesrDown -->
        <test-method signature="testc()[pri:0, instance:Test_Demo.Test_4@7c729a55]" started-at="2023-01-05T21:27:57 IST" name="testc" finished-at="2023-01-05T21:27:57 IST" depends-on-methods="Test_Demo.Test_4.testa" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test_4.testc()[pri:0, instance:Test_Demo.Test_4@7c729a55] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test_4.testc()[pri:0, instance:Test_Demo.Test_4@7c729a55] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testc -->
      </class> <!-- Test_Demo.Test_4 -->
      <class name="Test_Demo.Test_2">
        <test-method is-config="true" signature="BS()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:27:57 IST" name="BS" finished-at="2023-01-05T21:27:57 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BS -->
        <test-method is-config="true" signature="BT()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:27:57 IST" name="BT" finished-at="2023-01-05T21:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BT -->
        <test-method is-config="true" signature="BC()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="BC" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="BM" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test1()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="test1" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AM" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method signature="test2()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="test2" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="BM" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AM" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="BM" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test3()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="test3" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AM" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="AC()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AC" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC -->
        <test-method is-config="true" signature="AT()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AT" finished-at="2023-01-05T21:28:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AT -->
        <test-method is-config="true" signature="AS()[pri:0, instance:Test_Demo.Test_2@436813f3]" started-at="2023-01-05T21:28:01 IST" name="AS" finished-at="2023-01-05T21:28:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AS -->
      </class> <!-- Test_Demo.Test_2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
